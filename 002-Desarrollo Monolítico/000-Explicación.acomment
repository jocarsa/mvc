En esta primera parte del proyecto, vamos a realizar un desarrollo monolítico en el que, en cierta forma, estaremos trabajando con la implementación del patrón de diseño Modelo-Vista-Controlador (MVC). Sin embargo, al estar trabajando con una aplicación informática desarrollada de forma monolítica, la implementación de ese modelo se encontrará reflejada tanto en la vista como en el controlador de una manera bastante manual. Por lo tanto, tendremos tres componentes principales:

Formulario: Este actuará como la vista de la aplicación, presentando la información al usuario.
Script: Actuará como el controlador de la aplicación, manejando la lógica y la interacción con el usuario.
Archivo JSON: Actuará como la base de datos que implementará finalmente el modelo de datos.
Es importante tener en cuenta que, debido a que este programa es monolítico, será difícilmente ampliable y mantenible por un equipo de trabajo. No obstante, representa un primer ejemplo de la estructura de diseño que queremos presentar en esta publicación. Nuestro objetivo es desarrollar ejemplos viables de programas informáticos que implementen el concepto de Modelo-Vista-Controlador (MVC).

Cabe destacar que durante todos los ejercicios que se desarrollan dentro de esta publicación, se implementará el modelo de datos persistiéndolo en archivos JSON. En un escenario real, es muy probable que la persistencia de la información se realice a través de bases de datos relacionales, como por ejemplo MySQL. Sin embargo, esto complicaría el desarrollo de los ejercicios presentados en este libro. Por lo tanto, con el objetivo de centrarnos únicamente en el concepto principal de este libro, que es el patrón de diseño Modelo-Vista-Controlador (MVC), vamos a utilizar el formato JSON para guardar la información.

Existen muchos frameworks en los cuales, una vez que se define el modelo de datos, se ejecuta un script que se encarga de plasmar ese modelo de datos en una base de datos relacional mediante la creación de las tablas, los tipos de datos, las relaciones, etc. Pero aunque ese proceso sería altamente recomendable de aprender en el caso de estar desarrollando aplicaciones empresariales, de modo práctico, teniendo en cuenta que el objetivo de esta publicación consiste en proporcionar ejemplos teórico-prácticos acerca del desarrollo de aplicaciones con este patrón de diseño, vamos a utilizar el modelo de datos JSON para persistir la información por conveniencia.